{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovies","title","a","fetch","response","json","FindMovie","addMovie","isMoviesIncludes","useState","setMovie","setTitle","error","setError","findMovie","useCallback","trim","length","movieFromServer","Response","Error","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","setMovies","some","elem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.629afac9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","// eslint-disable-next-line @typescript-eslint/quotes\nconst API_URL = `https://www.omdbapi.com/?apikey=44b91b2&t=`;\n\nexport async function getMovies(title:string) {\n  const response = await fetch(`${API_URL}${title}`);\n\n  const movies = await response.json();\n\n  return movies;\n}\n","import React, { ChangeEvent, useCallback, useState } from 'react';\nimport './FindMovie.scss';\n\nimport className from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { getMovies } from '../../api/api';\n\ntype Props = {\n  addMovie: (x:Movie) => void\n  isMoviesIncludes: (x:Movie) => boolean\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, isMoviesIncludes }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState('Title is empty');\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError('');\n  };\n\n  const findMovie = useCallback(async () => {\n    if (title.trim().length === 0) {\n      setTitle('');\n      setError('Title is empty');\n    } else {\n      const movieFromServer = await getMovies(title);\n\n      if (movieFromServer.Response !== 'False') {\n        setMovie(movieFromServer);\n      } else {\n        setError(movieFromServer.Error);\n        setMovie(null);\n      }\n    }\n  }, [movie, title]);\n\n  const onAddMovie = () => {\n    if (movie && !isMoviesIncludes(movie)) {\n      addMovie(movie);\n      setTitle('');\n      setMovie(null);\n    } else {\n      if (!movie) {\n        setError('Pls choose the movie');\n      }\n\n      if (movie && isMoviesIncludes(movie)) {\n        setError('Movie already in the list');\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={className('input', {\n                'is-danger': error.length !== 0,\n              })}\n              value={title}\n              onChange={handleTitle}\n            />\n          </div>\n          {error.length !== 0 && (\n            <p className={className('help', {\n              'is-danger': error.length !== 0,\n            })}\n            >\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      { movie\n    && (\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard movie={movie} />\n      </div>\n    )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const moviesFromServer = (movie:Movie) => {\n    setMovies([\n      ...movies,\n      movie,\n    ]);\n  };\n\n  const isMoviesIncludes = (movie:Movie) => {\n    return movies.some(elem => elem.imdbID === movie.imdbID);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={moviesFromServer}\n          isMoviesIncludes={isMoviesIncludes}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}